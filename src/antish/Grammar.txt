--- questions
-- lexer or no lexer?
-- parsinglib or parsec ?
-- happy or alex?
/*
--Builtin Functions

mark
unmark
pickup
drop
turn
move

--Builtin Values


*/

--Grammar

Program = stmBlock'


stmBlock = stm | "{" stmBlock' "}"
stmBlock' =
    stm {NEWLINE stm}

stm =
    funCall
  | "if" expr "then" stmBlock ["else" stmBlock]
  | "for" [var "in"] expr stmBlock
  | "try" stmBlock "with" stmBlock ["catch" stmBlock]
  | "let" binding {COMMA NEWLINE binding} "in" stmBlock
  | "with" "probability" DOUBLE "do" stmBlock "otherwise" stmBlock

binding =
    identifier "=" expr
  | identifier {var} "=" stmBlock

funCall =
    funIdentifier [expr {expr}]

funIdentifier =
    identifier
  | constIdentifier

bexpr =
    "!" expr
  | expr "&&" expr
  | expr "||" expr


expr =
  | lexpr
  | iexpr
  | bexpr
  | funCall
  | "(" expr ")"


lexpr =
    "[" expr ".." expr "]"
  | "[" expr { "," expr} "]"


iexpr =
    INTEGER
  | var

var =
    identifier

-- identifier: [a-z]([A-z0-9])*
