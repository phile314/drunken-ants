--Builtin Functions

Mark expr
Unmark expr
Pickup
Drop
Turn expr
Move

--Builtin Values
Left
Right
LeftAhead, RightAhead, Ahead, Here
Friend, Foe, FriendWithFood, FoeWithFood, Food, Rock, Marker Integer, FoeMarker, Home, FoeHome

--Grammar
Program = stmBlock'

stmBlock = "{" statements "}"
statements = stm; {statements}

stm =
    funCall
  | "if" expr "then" stmBlock ["else" stmBlock]
  | "for" [var "in"] expr stmBlock
  | "try" stmBlock "catch" stmBlock
  | "let" binding {COMMA binding} "in" stmBlock
  | "with" "probability" DOUBLE "do" stmBlock "otherwise" stmBlock

binding =
    identifier "=" expr
  | identifier {var} "=" stmBlock

funCall =
    funIdentifier [expr {expr}]

funIdentifier =
    identifier
  | constIdentifier

bexpr =
    scond sdir
  | expr "&&" expr
  | expr "||" expr
  | "!" expr
  | "(" bexpr ")"

scond =
    Friend
  | Foe
  | FriendWithFood
  | FoeWithFood
  | Food
  | Rock
  | Marker iexpr
  | FoeMarker
  | Home
  | FoeHome

sdir =
    Here
  | Ahead
  | LeftAhead
  | RightAhead

expr =
  | iexpr
  | bexpr
  | var
  | dir

iexpr = INTEGER

var = identifier
